name: CI

on:
  push:
    branches: ['main']
  pull_request:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node18-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Create node_modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

  lint:
    name: Lint
    needs: ['dependencies']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Restore node_modules
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node18-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Lint
        run: npm run prettier:check && npm run eslint:check && npm run ts:check

  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    needs: ['dependencies', 'lint']
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::238520927957:role/github_action
          aws-region: eu-central-1
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Restore node_modules
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node18-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: npm run build

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      # On push to "main", deploy the Terraform infrastructure
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
